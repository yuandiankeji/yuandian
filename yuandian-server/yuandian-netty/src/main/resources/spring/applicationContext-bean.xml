<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd">
    <!-- 自动扫描注解的bean -->
    <context:component-scan base-package="com.yuandian.server.logic.*"/>
    <context:property-placeholder location="classpath:redis.properties"/>

    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <!-- 最大连接数 -->
        <property name="maxTotal" value="${redis.maxTotal}"/>
        <!-- 最大空闲连接数 -->
        <property name="maxIdle" value="${redis.maxIdle}"/>
        <!-- 每次释放连接的最大数目 -->
        <property name="numTestsPerEvictionRun" value="${redis.numTestsPerEvictionRun}"/>
        <!-- 释放连接的扫描间隔（毫秒） -->
        <property name="timeBetweenEvictionRunsMillis" value="${redis.timeBetweenEvictionRunsMillis}"/>
        <!-- 连接最小空闲时间 -->
        <property name="minEvictableIdleTimeMillis" value="${redis.minEvictableIdleTimeMillis}"/>
        <!-- 连接空闲多久后释放, 当空闲时间>该值且空闲连接>最大空闲连接数时直接释放 -->
        <property name="softMinEvictableIdleTimeMillis" value="10000"/>
        <!-- 获取连接时的最大等待毫秒数,小于零:阻塞不确定的时间,默认-1 -->
        <property name="maxWaitMillis" value="${redis.maxWait}"/>
        <!-- 在获取连接的时候检查有效性, 默认false -->
        <property name="testOnBorrow" value="${redis.testOnBorrow}"/>
        <!-- 在空闲时检查有效性, 默认false -->
        <property name="testWhileIdle" value="${redis.testWhileIdle}"/>
        <!-- 连接耗尽时是否阻塞, false报异常,ture阻塞直到超时, 默认true -->
        <property name="blockWhenExhausted" value="${redis.blockWhenExhausted}"/>
    </bean>
    <bean class="com.yuandian.server.core.factory.SpringBeanFactory" id="springBeanFactory"/>

    <bean class="redis.clients.jedis.JedisPool" id="chatJedisPool">
        <constructor-arg index="0" ref="jedisPoolConfig"/>
        <constructor-arg index="1" value="${chat.ip}"/>
        <constructor-arg index="2" value="${chat.port}" type="int"/>
        <constructor-arg index="3" value="${redis.timeOut}" type="int"/>
        <constructor-arg index="4" value="${chat.auth}"/>
        <constructor-arg index="5" value="false"/>
    </bean>

    <bean class="redis.clients.jedis.JedisPool" id="globalJedisPool">
        <constructor-arg index="0" ref="jedisPoolConfig"/>
        <constructor-arg index="1" value="${global.ip}"/>
        <constructor-arg index="2" value="${global.port}" type="int"/>
        <constructor-arg index="3" value="${redis.timeOut}" type="int"/>
        <constructor-arg index="4" value="${global.auth}"/>
    </bean>

    <bean class="com.yuandian.server.config.RedisService" id="redisService">
        <property name="jedisPool" ref="chatJedisPool"/>
    </bean>
<!--    <bean class="com.yuandian.server.config.RedisService" id="redisGlobalService">-->
<!--        <property name="jedisPool" ref="chatJedisPool"/>-->
<!--    </bean>bean-->

</beans>